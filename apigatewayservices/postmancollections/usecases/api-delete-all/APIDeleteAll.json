{
	"info": {
		"_postman_id": "3963cc29-e2da-4f7a-953a-68384d7e6aa4",
		"name": "APIGateway UseCase - Delete All APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get all APIs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"let apis = JSON.parse(responseBody).apiResponse;\r",
							"if (apis === undefined || apis === null || apis.length === 0 || apis[0].responseStatus === \"NOT_FOUND\") {\r",
							"    console.log(\"No API found!\");\r",
							"} else {\r",
							"    pm.globals.set(\"apiId\", apis[0].api.id);\r",
							"    if (apis[0].api.isActive) {\r",
							"        postman.setNextRequest(\"Deactivate one API\");\r",
							"        console.log(\"Deactivate and delete API\");\r",
							"    } else {\r",
							"        postman.setNextRequest(\"Delete one API\");\r",
							"        console.log(\"Delete API\");\r",
							"    }\r",
							"    console.log(\"ID: \" + apis[0].api.id);\r",
							"    console.log(\"Name: \" + apis[0].api.apiName);\r",
							"    console.log(\"Version: \" + apis[0].api.apiVersion);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseGatewaySysAPIsUrl}}/apis",
					"host": [
						"{{baseGatewaySysAPIsUrl}}"
					],
					"path": [
						"apis"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deactivate one API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains apiResponse\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiResponse).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains api\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiResponse.api).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains isActive\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiResponse.api.isActive).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"API is inactive\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiResponse.api.isActive).to.be.false;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseGatewaySysAPIsUrl}}/apis/{{apiId}}/deactivate",
					"host": [
						"{{baseGatewaySysAPIsUrl}}"
					],
					"path": [
						"apis",
						"{{apiId}}",
						"deactivate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"if (pm.response.code === 204) {\r",
							"    postman.setNextRequest(\"Get all APIs\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseGatewaySysAPIsUrl}}/apis/{{apiId}}?forceDelete=true",
					"host": [
						"{{baseGatewaySysAPIsUrl}}"
					],
					"path": [
						"apis",
						"{{apiId}}"
					],
					"query": [
						{
							"key": "forceDelete",
							"value": "true"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{Password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{User}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.request.headers.add({key: 'Accept', value: 'application/json' })"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}